package com.anvesh.recepieapp.services;

import com.anvesh.recepieapp.converters.RecipeCommandToRecipe;
import com.anvesh.recepieapp.converters.RecipeToRecipeCommand;
import com.anvesh.recepieapp.dataTransfers.RecipeCommand;
import com.anvesh.recepieapp.domain.Recipe;
import com.anvesh.recepieapp.repositories.RecipeRepository;
import lombok.extern.slf4j.Slf4j;
import org.springframework.stereotype.Service;

import java.util.HashSet;
import java.util.Optional;
import java.util.Set;

@Slf4j
@Service
public class RecipeServiceImp implements RecipeService {
    private final RecipeRepository recipeRepository;
    private final RecipeToRecipeCommand toRecipeCommand;
    private final RecipeCommandToRecipe toRecipe;

    public RecipeServiceImp(RecipeRepository recipeRepository, RecipeToRecipeCommand toRecipeCommand, RecipeCommandToRecipe toRecipe) {
        this.recipeRepository = recipeRepository;
        this.toRecipeCommand = toRecipeCommand;
        this.toRecipe = toRecipe;
    }

    @Override
    public Set<Recipe> getRecipies() {
//        log.debug("hello there");
        Set<Recipe> recipes = new HashSet<>();
        recipeRepository.findAll().iterator().forEachRemaining(recipes::add);
        log.debug("Found recipies : " + recipes.size());
        return recipes;
    }

    @Override
    public Recipe findById(Long l) {
        Optional<Recipe> recipe = recipeRepository.findById(l);

        return recipe.orElseThrow(() -> new RuntimeException("Recipie Not found"));
    }

    @Override
    public RecipeCommand commandFindyById(Long l) {
        return toRecipeCommand.convert(findById(l));
    }

    @Override
    public RecipeCommand saveReciepeCommand(RecipeCommand command) {
//        Id Is not generated since it is not saved into database
        Recipe recipe = toRecipe.convert(command);
        log.debug("Saving recipe to DB : " + recipe.getId());
//        Id is generated since database assigns an autogenerated id to it after saving
        Recipe savedRecipe = recipeRepository.save(recipe);
        log.debug("Saved recipe : " + savedRecipe.getId());
        return toRecipeCommand.convert(recipe);

    }

    @Override
    public void deletById(Long id) {
        recipeRepository.deleteById(id);
        log.debug("Recipe: " + id + " deleted");
    }
}
